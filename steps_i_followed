######################################
IMPORTANT POINTS
######################################
- form submission makes a default POST request, so the url: articles_path will go to the create action (and not index)

- redirect_to makes a new request. render just renders another view

- redirect_to @article will by default goto the show action

- _form has form_for @article (No url mentioned) and this form is used in both new and edit actions. Rails can infer which url to hit from @article because Articles is a resource. This is resourceful routes.
  - @article goes to update action in case of the edit form
  - @article goes to create action in case of new form
######################################




- generate a welcome controller

- welcome: create index action and also the index view

- update the routes.rb file with welcome#index as root

- generate articles controller

- declare a REST resource 
  - resource :articles 
  - can now confirm by running rake routes

- articles: create index action and view

- add a link 'goto articles' in the welcome index view which links to articles_path (this is articles/index)

- create a link to create new article in articles/index 

- generate article model with the appropriate db fields

- articles: create 'new' action and view

- a form to create a new article in articles/new
  - article submits to create action

- articles: create 'create' action
  - can show the params received after form submission by putting "render plain: params[:article].inspect" in articles create action

- articles create action: save the article params in the db
  - make a new Article object(@article) while passing the params in the constructor in the form of strong params(strong params method should be private)
  - @article.save
  - redirect_to @article (will goto show action)

- articles: create show action and view
  - create article object with the params[:id] in show action
  - create a link to index in view to show all articles

- create a link from article/show to articles/index
  - write the code to list all the articles in articles/index 

- add validation to article
  - add validation code to article model
  - update article#create action to: if @article.save is a success go to show all articles else goback to the new artile page which would list the errors
  - update the article/new to show the errors
  - create a new @article object in article#new action

- article: create edit action and view

- use partial in 'new' and 'edit'
  - create partial _form
  - render the same _form in both new and edit

- create update action in the controller
  - the edit form will get submitted to the update action in controller.
  - @article.update method with all the params(article_params -- permitted title and body) will be used to update the article in the db
 
- generate controller comments

- generate model comments with article:references

- add has_many :comments in article model

- add a template to write comments in article show.html.erb












